## Lab 3.1 Stars And Stripes ##

**Sample Output:**
Lab3.1 â€“ StarsAndStripes

Written by your name

--------------------
********************
--------------------
********************
--------------------
********************
--------------------
--------------------
********************
--------------------
********************
--------------------
********************
--------------------
--------------------
********************
--------------------
********************
--------------------
********************
--------------------

```
**Main.java**
// Instantiate a StarsAndStripes object.
StarsAndStripes object = new StarsAndStripes("your name");

// Call the methods needed to make the patterns on the word document
object.printTwoBlankLines();
object.printASmallBox();
object.printTwoBlankLines();
object.printABigBox();

**StarsAndStripes.java**
private String name; //global variable
   
   public StarsAndStripes(String one) //constructor method
   {
     // init global variable to value stored in local variable one
     name = one; 
     System.out.println("Lab3.1 - StarsAndStripes");
     printTwoBlankLines();
      
    
	   System.out.println("Written by "+ name);
     printTwoBlankLines();
   }


   public void printTwentyStars()
   {
   	 // your code here
   	 System.out.println("********************");
   }

   public void printTwentyDashes()
   {
   	 // your code here
   	 System.out.println("--------------------");
   }

   public void printTwoBlankLines()
   {
   	 // your code here
     System.out.println();
     System.out.println();
   }
   
   public void printASmallBox()
   {		
  	 //your code here
     //the small box should have 4 lines of dashes
     //and 3 lines of stars 
     //See sample output
     printTwentyDashes(); 
     printTwentyStars();
     printTwentyDashes(); 
     printTwentyStars();
     printTwentyDashes();
     printTwentyStars();
     printTwentyDashes(); 
   }
 
   public void printABigBox()
   { 	
   	 // your code here
     //the big box should callprintASmallBox() to make a big box
     //see sample output
     printASmallBox();
     printASmallBox();
   }   
```

## Lab 3.2 Dog ##

**Sample Output:**
7
33
rover
56
bob
15
Dog - Bob 3

```
**Main.java**
// instantiate a dog object and call it d
//the name of the dog should be rover
Dog d = new Dog("rover"); 
		
System.out.println( d.getDogYears( 7 ) );
d.increaseAgeByOne();
d.increaseAgeByOne();
System.out.println( d.getDogYears( 11 ) );
System.out.println( d.getName() );
d.increaseAgeByOne();
d.increaseAgeByOne();
d.increaseAgeByOne();
d.increaseAgeByOne();
System.out.println( d.getDogYears( 8 ) );
		
// instantiate a dog object and call it g
// this dog should be named bob and be 3 years old
Dog g = new Dog("bob", 3); 
    
System.out.println( g.getName() );
System.out.println( g.getDogYears( 5 ) );
System.out.println( g );

**Dog.java**
	// These are global variables
	// attributes, properties, fields, instance variables
  	private int age;
  	private String name;
	
	
	// Here are the constructor methods.
	// Their purpose is to initialize the global variables.
	// ALL global variables need to be initialized in EACH constructor. 
   //the default name of the dog should be Spot and the default age should be 1
   public Dog( )  
  	{
   	//your code here
      name = "spot"; 
      age = 1;
  	}
 	
  	public Dog( String n )  
  	{
   	//your code here
      age = 1; 
      name = n; 
  	}
  
	public Dog( String n, int a )  
	{
	//your code here
    
    this.name = n; 
    this.age = a; 
	}

    //this is a mutator method
    // increase the age of the dog by 1
    //remember to use global variables and not local ones
  	public void increaseAgeByOne()
  	{
		//your code here	
      age++;		  
  	}
  
   // This should return the age of the dog in dog years
  	public int getDogYears( int peopleYears )
  	{
		// your code here
      return age * peopleYears; 
  	}

	
	// accessor methods return the value of a global variable
  	public int getAge()    
  	{
  		//your code here
        return age;
  	}

	
	// accessor methods return the value of a global variable
  	public String getName()    
  	{
  		//your code here
      return name; 
    }
	
	
	// A toString() method should return information about the 
	// object's global variables
  //toString() is called when you print the object
  // This should return:
  // Dog - followed by the name of the dog, a space, and the age of dog	
  	public String toString()    
  	{
  		//your code here
  	  return "Dog: " + name + ", Age: " + age; 
    }
```

## Lab 3.3 Triangle ##

**Sample Output:**
The Perimeter of a Triangle

SideA = 3, SideB = 3, SideC = 3
Perimeter = 9.0
Area = 3.897114317029974

SideA = 7, SideB = 8, SideC = 9
Perimeter = 24.0
Area = 26.832815729997478

SideA = 10, SideB = 9, SideC = 11
Perimeter = 30.0
Area = 42.42640687119285

```
**Main.java**
System.out.println("The Perimeter of a Triangle");
System.out.println("\n"); 
      
//test case 1
Triangle test = new Triangle(3, 3, 3);
      
System.out.println(test);
test.calcPerimeter();
System.out.println("Area = " + test.getArea() );      
System.out.println("\n");
      
//test case 2
test.setSideA(7);
test.setSideB(8);
test.setSideC(9);
      
System.out.println(test);
test.calcPerimeter();
System.out.println("Area = " + test.getArea() );      
System.out.println("\n");
      
//test case 3
test.setSideA(10);
test.setSideB(9);
test.setSideC(11);
      
System.out.println(test);
test.calcPerimeter();
System.out.println("Area = " + test.getArea() ); 

**Triangle.java**
  // global variable delcaration
	private int sideA, sideB, sideC;
	private double perimeter;

  // constructor
	public Triangle(int a, int b, int c)
	{
    sideA = a; 
    sideB = b; 
    sideC = c; 
	  perimeter = a + b + c; 
  }

	public void calcPerimeter()
	{
    perimeter = sideA + sideB + sideC; 
    System.out.println("Perimeter: " + perimeter); 
	}

	public double getArea()
	{
    double s = perimeter / 2;   
    double area = Math.sqrt(s*(s - sideA)*(s - sideB)*(s - sideC)); 
    return area; 
	}
   
   public void setSideA(int a)
	{
    sideA = a; 
	}
   
   public void setSideB(int b)
	{
    sideB = b; 
	}
   
   public void setSideC(int c)
	{
    sideC = c; 
	}
   
  public String toString()
  {
    return "SideA = " + sideA + "," + " SideB = " + sideB + "," + " SideC = " + sideC;   
  }
```
